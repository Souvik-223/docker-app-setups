services:
  server:
    build:
      context: ./src
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
    ports:
      - 3000:3000
    develop:
      watch: 
        - action: sync
          path: ./src/
          target: /src/app
          ignore: 
            - node_modules/
        - action: rebuild
          path: package.json
          target: /app
    depends_on:
      db:
        condition: service_healthy
      cache: 
        condition: service_healthy

  db:
    image: postgres
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=test_postgres
      - POSTGRES_PASSWORD=password 
    expose:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    
  cache:
    image: redis
    restart: always
    expose:
      - 6379:6397
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
      
volumes:
  db-data:



